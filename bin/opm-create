#!/usr/bin/env ruby
# Copyright 2010 Red Hat, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

def usage
    puts <<USAGE
== Synopsis

opm create: Creates a new application container. This command must be run as root.

== Usage

opm create [NAME [VERSION [SUMMARY]]] 

Options:
-h|--help:
   Prints this message
   

NAME: The name of the application to create
VERSION: The starting version of the application. (Default: 0.1)
USAGE
end

require 'openshift-sdk'
require 'fileutils'

opts = GetoptLong.new(
    ["--porcelin",               GetoptLong::NO_ARGUMENT],
    ["--debug",                  GetoptLong::NO_ARGUMENT],
    ["--help",             "-h", GetoptLong::NO_ARGUMENT]
)

args = {}
begin
    opts.each{ |k,v| args[k]=v }
rescue GetoptLong::Error => e
    usage
    exit -100
end

$opm_debug = true if args['--debug']
$porcelin = args['--porcelin'] ? true : false

begin
    name = ARGV.shift
    if name.nil?
        raise
    end
    version = ARGV.shift
    if not version.nil?
        summary = ARGV.shift
        if summary.nil?
            summary = ""
        end
    else
        version = "1.0"
    end
rescue Exception=>e
    usage
    exit -100
end

if args['--help'] 
  usage
  exit -101
end

# expected args - application name 
# this script runs as system interface (on Flex - paster, on Express - libra-passenger)
# create a bare-bones app object
# create a new user (using new guid from app)
# fill up the super-user datastore that contains the map
#   of user<=>app
# then, acting as the new user, fill up the application object
#   i.e. create basic descriptor/control.spec

# create new app
app = Openshift::SDK::Model::Application.new(name)
app.gen_uuid

# create user for this app
user = Openshift::SDK::Model::User.new(app)
user.create!
user.setup_app_territory

# change privileges
user.switch_privileges

# setup app package path
user_home_dir = user.basedir + "/" + user.name
app.populate_work_area(user.name, user_home_dir, version, summary)
app.save!

print app.guid

