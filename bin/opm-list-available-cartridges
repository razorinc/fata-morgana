#!/usr/bin/env ruby
# Copyright 2010 Red Hat, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

def usage
    puts <<USAGE
== Synopsis

opm list-available-cartridges: Prints a list of all available cartridges and provided features

== Usage

opm list-available-cartridges

Options:
-h|--help:
   Prints this message
USAGE
end

require 'openshift-sdk'

opts = GetoptLong.new(
    ["--porcelin",               GetoptLong::NO_ARGUMENT],
    ["--debug",                  GetoptLong::NO_ARGUMENT],
    ["--help",             "-h", GetoptLong::NO_ARGUMENT]
)

args = {}
begin
    opts.each{ |k,v| args[k]=v }
rescue GetoptLong::Error => e
    usage
    exit -100
end

$opm_debug = true if args['--debug']
$porcelin = args['--porcelin'] ? true : false

if args['--help']
  usage
  exit -101
end

carts = Openshift::SDK::Model::Cartridge.list_available
cart_rows = []
carts.each do |cart|
  cart_map = {}
  cart_map["name"] = cart.name
  cart_map["version"] = cart.version
  cart_map["features"] = cart.provides_feature.join(",")
  cart_map["summary"] = cart.summary
  cart_rows.push(cart_map)
end

if $porcelin
	print JSON.generate(cart_map)
else
  Openshift::SDK::Utils::TableFormat.table(
    ["Name", "Version", "Features", "Summary"],
    ["name", "version", "features", "summary"],
    [  35  ,    10    ,     35    ,     50   ],
    cart_rows
  )
end
