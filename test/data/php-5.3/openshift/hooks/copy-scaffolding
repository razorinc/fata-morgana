#!/bin/bash
#
#--
# Copyright 2010 Red Hat, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#++
#

# Exit on errors.
set -e

declare -A  g_subst_map

#
# Functions.
#
function init_substitution_map() {
   local cfg_dir mapinfo
   cfg_dir=${1:-'.'}
   g_subst_map['php:CONFIGURATION_DIR']="$cfg_dir"
   g_subst_map['php:TEMPLATE_SESSION_SAVE_PATH']="$cfg_dir/sessions/"
   g_subst_map['php:TEMPLATE_UPLOAD_TMP_DIR']="$cfg_dir/tmp/"
   g_subst_map['php:APPLICATION_NAMESPACE']="$application_name"
   g_subst_map['php:APPLICATION_DOMAIN']="$openshift_domain"
   g_subst_map['www-dynamic:BIND_ADDRESS']=`os_get_userifaddr`

   for k in `env | egrep "^(php_www_(static|dynamic))" | cut -f1 -d '='`; do
      g_subst_map["php:${k:4}"]="${!k}"
   done

   for k in `env | grep "^OPENSHIFT_" | cut -f1 -d '='`; do
      g_subst_map[$k]="${!k}"
   done

   mapinfo="keys:[${!g_subst_map[@]}], values:[${g_subst_map[*]}]"
   [ -n "$_DEBUG_HOOKS" ]  &&  os_log_debug "init_subst_map($1) = $mapinfo"
   return 0

}  #  End of function  init_substitution_map.


function copy_template() {
   local src dest
   src=${1:-""}
   dest=${2:-""}
 
   [ ! -f "$src" ]  &&  die 22 "copy_template - invalid source '$src'"
   [ -z "$dest" ]   &&  die 22 "copy_template - invalid dest '$dest'"

   substitutions=""
   for k in ${!g_subst_map[@]}; do 
      substitutions="$substitutions; s#\${$k}#${g_subst_map[$k]}#g;"
   done

   sed "${substitutions}" "$src" >  "$dest"

}  #  End of function  copy_template.


function initialize_config_dir() {
   app_config_dir=${1:-"."}

   mkdir -p "${app_config_dir}/{etc,conf.d,sessions,tmp}"

   for d in docs ext php cache cfg data download temp tests www; do
      mkdir -p "${app_config_dir}/phplib/pear/$d"
   done

   ln -s /usr/lib64/httpd/modules "${app_config_dir}/modules"
   ln -s /etc/httpd/conf/magic    "${app_config_dir}/conf/magic"

}  #  End of function  initialize_config_dir.


function copy_php_scaffolding() {
   app_config_dir=${1:-"."}

   #  Ensure configuration exists for the component.
   if ! test -d "$app_config_dir/etc/conf"; then
      mkdir -p "$app_config_dir/etc/conf"

      local templates_dir
      templates_dir=$(cd -P "${hook_dir}/../templates" && pwd -P)
      for f in `(cd "$templates_dir"; find . -type f)`; do
         # Copy over the interpolated template to the app component space.
         copy_template "$templates_dir/$f" "$app_config_dir/$f"
      done
   fi

}  #  End of function  copy_php_scaffolding.


#
# _main()
#
source $(cd -P -- "$(dirname -- "$0")" && pwd -P)/common.sh
[ $# -ge 1 ]  ||  os_print_hook_usage

comp_guid=${OPENSHIFT_COMPONENT_GUID:-""}
php_app_home=${OPENSHIFT_APP_HOME_DIR:-"."}
cfgdir=$php_app_home/$app_config_subdir/$comp_guid

#  Initialize config dir and source php's www-{static,dynamic}-server env.
intialize_config_dir  "$cfgdir"
os_source_config      "$cfgdir/php-www-static-server.env"
os_source_config      "$cfgdir/php-www-dynamic-server.env"

#  Initialize substitution map and copy over scaffolding.
init_substitution_map "$cfgdir"
copy_php_scaffolding  "$cfgdir"

#  Initialize pear.
pear config-create "$cfgdir/phplib/pear" "$php_app_home/.pearrc"
pear -c "$php_app_home/.pearrc" config-set php_ini "$cfgdir/etc/conf/php.ini"

