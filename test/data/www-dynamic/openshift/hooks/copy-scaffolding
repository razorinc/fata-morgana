#!/bin/bash
#
#--
# Copyright 2010 Red Hat, Inc.
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#++
#

# Exit on errors.
set -e

declare -A  g_subst_map

#
# Functions.
#
function init_substitution_map() {
   local cfg_dir mapinfo ifaddr
   cfg_dir=${1:-'.'}
   ifaddr=`os_get_userifaddr`
   g_subst_map['www-dynamic:CONFIGURATION_DIR']="$cfg_dir"
   g_subst_map['www-dynamic:BIND_ADDRESS']="$ifaddr"
   g_subst_map['app-server:BIND_ADDRESS']="$ifaddr"
   g_subst_map['app-server:BIND_PORT']="9100"

   for k in `env | grep "^OPENSHIFT_" | cut -f1 -d '='`; do
      g_subst_map[$k]="${!k}"
   done

   mapinfo="keys:[${!g_subst_map[@]}], values:[${g_subst_map[*]}]"
   os_log_debug "init_subst_map($1) = $mapinfo"
   return 0

}  #  End of function  init_substitution_map.


function copy_from_template() {
   local src dest
   src=${1:-""}
   dest=${2:-""}
 
   [ ! -f "$src" ]  &&  die 22 "copy_template - invalid source '$src'"
   [ -z "$dest" ]   &&  die 22 "copy_template - invalid dest '$dest'"

   substitutions=""
   for k in ${!g_subst_map[@]}; do 
      substitutions="$substitutions; s#\${$k}#${g_subst_map[$k]}#g;"
   done

   if test "$src" = "$dest"; then
      sed -i "${substitutions}" "$dest"
      return $?
   fi

   sed "${substitutions}" "$src" >  "$dest"

}  #  End of function  copy_from_template.


function copy_scaffolding() {
   app_config_dir=${1:-"."}

   #  Ensure configuration exists for the component.
   if ! test -d "$app_config_dir/conf"; then
      mkdir -p "$app_config_dir/conf" "$app_config_dir/conf.d/"

      local templates_dir
      templates_dir=$(cd -P "${hook_dir}/../templates" && pwd -P)
      for f in `(cd "$templates_dir"; find . -type f)`; do
         # Copy over the interpolated template to the app component space.
         copy_from_template "$templates_dir/$f" "$app_config_dir/$f"
      done
   fi

}  #  End of function  copy_scaffolding.


#
# _main()
#
source $(cd -P -- "$(dirname -- "$0")" && pwd -P)/common.sh
[ $# -ge 1 ]  ||  os_print_hook_usage

cfgdir=${OPENSHIFT_HOOK_CONTEXT:-"."}
init_substitution_map "$cfgdir"
copy_scaffolding      "$cfgdir"

# We also need to do an in-place interpolation on the app.vhost.conf file.
app_vhost="$cfgdir/www-static/conf/app.vhost.conf"
copy_from_template "$app_vhost" "$app_vhost"

exit 0

