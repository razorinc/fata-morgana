#!/bin/bash
#
# Copyright Â© 2010 Red Hat, Inc. All rights reserved
#
# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.
#

# Exit on errors.
set -e

declare -A  g_subst_map

#
# Functions.
#
function init_substitution_map() {
   local cfg_dir mapinfo
   cfg_dir=${1:-'.'}
   g_subst_map['www-dynamic:CONFIGURATION_DIR']="$cfg_dir"
   g_subst_map['www-dynamic:BIND_ADDRESS']=`os_get_userifaddr`

   for k in `env | grep "^OPENSHIFT_" | cut -f1 -d '='`; do
      g_subst_map[$k]="${!k}"
   done

   mapinfo="keys:[${!g_subst_map[@]}], values:[${g_subst_map[*]}]"
   [ -n "$_DEBUG_HOOKS" ]  &&  os_debug_log "init_subst_map($1) = $mapinfo"
   return 0

}  #  End of function  init_substitution_map.


function copy_template() {
   local src dest
   src=${1:-""}
   dest=${2:-""}
 
   [ ! -f "$src" ]  &&  die 22 "copy_template - invalid source '$src'"
   [ -z "$dest" ]   &&  die 22 "copy_template - invalid dest '$dest'"

   substitutions=""
   for k in ${!g_subst_map[@]}; do 
      substitutions="$substitutions; s#\${$k}#${g_subst_map[$k]}#g;"
   done

   sed "${substitutions}" "$src" >  "$dest"

}  #  End of function  copy_template.


function copy_scaffolding() {
   app_config_dir=${1:-"."}

   #  Ensure configuration exists for the component.
   if ! test -d "$app_config_dir/conf"; then
      mkdir -p "$app_config_dir/conf" "$app_config_dir/conf.d/"

      local templates_dir
      templates_dir=$(cd -P "${hook_dir}/../templates" && pwd -P)
      for f in `(cd "$templates_dir"; find . -type f)`; do
         # Copy over the interpolated template to the app component space.
         copy_template "$templates_dir/$f" "$app_config_dir/$f"
      done
   fi

}  #  End of function  copy_scaffolding.


#
# _main()
#
source $(cd -P -- "$(dirname -- "$0")" && pwd -P)/common.sh
os_initialize_hook_env $@
[ $# -ge 1 ]  ||  os_print_hook_usage

comp_guid=${OPENSHIFT_COMPONENT_GUID:-""}
cfgdir=${OPENSHIFT_APP_PROD_DIR:-"."}/$app_config_subdir/$comp_guid
init_substitution_map "$cfgdir"
copy_scaffolding      "$cfgdir"


