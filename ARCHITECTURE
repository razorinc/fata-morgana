Directory hierarchy
===================

Tentative:
   a. Local user/group created per application :
          uid=<uuid>
          gid=<uuid>
          homedir=/opt/openshift/applications/<uuid>/
      Hierarchy:
        ~/
          app/
             .openshift/     symlinked from  <- ~uuid/configuration/  on flex
                             unused in express for now

          configuration/    symlinked to ->  ~uuid/app/configuration/ on flex
	                    a "real" internal directory on express
               app.env            application environment settings
               <php1-guid>/       php1 component configuration
                    www-dynamic/        symlink to -> ../<www-dynamic-guid>

               <www-dynamic-guid> www-dynamic configuration
               php1                     symlink to -> <php1-guid>
               <secondphp-guid>/  secondphp component configuration
               secondphp                symlink to -> <secondphp-guid>

          repository/     symlink to ->  /var/openshift/repository/<uuid>
          production      symlink to ->  /srv/openshift/<uuid>

   b. Repository created for application
          Location: /var/openshift/repository/<uuid>

   c. Deployment location = /srv/openshift/<uuid>
      Hierarchy:
          app/.openshift/
          configuration/    symlinked to ->  ../app/.openshift/ always

   d. Cartridges installed to /opt/openshift/cartridges/


   Hooks use  ${app.home}/configuration 



Workflow
========
  Workflow (+events+connectors+hooks) and how they tie in together -- this
  is a 'scrappy' first attempt:
  application-create*
  add-feature|component-to-application  [optional - called 0-n times]
     <install-dependencies-and-copy-scaffolding>
        for each dependency:
           if native:  yum install native
        else:
           run-hook(install)
           for all sub-dependencies: install && build && copy-scaffolding
           run-hook(build)
           run-hook(copy-scaffolding-to-be-renamed-hook)
  deploy-application*
     <install-dependencies-and-copy-scaffolding>
     for each cartridge:  run-hook(configure)
     for each component:  establish-connections*  #  could be called 'n' times.
  start-stop-application*
     for cartridge in start-or-stop-order:  run-hook(start|stop)
  delete-application*
     for each cartridge: 
        run-hook(deconfigure)
        *remove (handle removal?? flex only likely)


Calls to cartridge hooks
========================

Tentative:

Calls to all cartridge hooks will take the following form:

$cartridge/$hook $APP_GUID $COMPONENT_GUID $APP_NAME

cartridge = Cartridge we're working with (php, apache, mysql, etc)
hook = Call to the hook we want (start, stop, deconfigure)
app_guid = The unique identifier for the app (UUID)
component_guid = The instance identifier for app (unique to each app in a
    cluster.  if an app has 2 nodes in the cluster, each app on that node
    would get a different component_guid - like instance_1 instance_2)
app_name = String name used for messaging (in express $NAME-$DOMAIN)


    Environment passed to hooks:
       Global Set:
          OPENSHIFT_CONFIG_DIR     #  default: /etc/openshift
          OPENSHIFT_PROFILE        #  express|flex

      App specific:
          OPENSHIFT_APP_GUID
          OPENSHIFT_APP_TYPE            #  php|tomcat|jboss ... 
          OPENSHIFT_APP_HOME_DIR        #  ${HOME}/
          OPENSHIFT_APP_REPO_DIR        #  ${HOME}/repository/
          OPENSHIFT_APP_PROD_DIR        #  ${HOME}/production/

      On a per-hook basis?? 
          OPENSHIFT_APP_BINDADDR   #  internal bind address 
                                   #  127.0.*.*  - 'n' (=64) per app.
          OPENSHIFT_APP_PORT       #  internal port number.


